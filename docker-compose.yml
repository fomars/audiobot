version: '3.7'

services:
  bot:
    container_name: bot
    build:
      context: .
      dockerfile: compose/bot_app/Dockerfile
    links:
      - redis
      - telegram-bot-api
      - db
    depends_on:
      - redis
      - telegram-bot-api
      - db
    env_file:
      - ./.env
    environment:
      REDIS_HOST: redis
      API_URL: http://telegram-bot-api:8081/bot
    volumes:
      - ./mount/output:/app/output
      - ./mount/telegram-bot-api:/app/input
    restart: always

  redis:
    container_name: redis
    image: redis:7.0
    hostname: redis
    restart: always

  worker:
    build:
      context: .
      dockerfile: compose/bot_app/Dockerfile
    hostname: worker
    entrypoint: celery
    command: -A app.tasks worker --loglevel=DEBUG
    volumes:
      - ./mount/output:/app/output
      - ./mount/telegram-bot-api:/app/input
    links:
      - redis
    depends_on:
      - redis
    env_file:
      - ./.env
    environment:
      REDIS_HOST: redis
    restart: always

  telegram-bot-api:
    container_name: telegram-bot-api
    hostname: telegram-bot-api
    platform: linux/x86_64
    image: aiogram/telegram-bot-api:latest
    environment:
      TELEGRAM_LOCAL: 1
      TELEGRAM_VERBOSITY: 2
    volumes:
      - ./mount/telegram-bot-api:/var/lib/telegram-bot-api
      - ./mount/output:/var/lib/telegram-bot-api/output
    ports:
      - "8081:8081"
    env_file:
      - ./.env
    restart: always

  db:
    image: postgres:13
    restart: always
    env_file:
      - ./.env
    ports:
      - "65432:5432"
    volumes:
      - ./mount/postgres:/var/lib/postgresql/data